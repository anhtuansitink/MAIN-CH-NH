- Ph√°t nh·∫°c khi ch·∫°y m√£
local joinSound = Instance.new("Sound", workspace)
joinSound.SoundId = "rbxassetid://"
joinSound.Volume, joinSound.Looped = 3, false
joinSound:Play()
end

local player = game.Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")

task.spawn(function()
    while task.wait(1) do
        if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
            player.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end)

local player = game.Players.LocalPlayer

local gui = Instance.new("ScreenGui")
gui.Name = "DoughOverlay"
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = true
gui.Parent = player:WaitForChild("PlayerGui")

local background = Instance.new("Frame")
background.Size = UDim2.new(1, 0, 1, 0)
background.BackgroundColor3 = Color3.new(0, 0, 0)
background.BackgroundTransparency = 0.4
background.Visible = true
background.Parent = gui

local topText = Instance.new("TextLabel")
topText.Size = UDim2.new(1, 0, 0.1, 0)
topText.Position = UDim2.new(0, 0, 0, 0)
topText.BackgroundTransparency = 1
topText.Text = "TUAN AURA HUB"
topText.TextColor3 = Color3.fromRGB(255, 255, 255)
topText.TextScaled = true
topText.Font = Enum.Font.FredokaOne
topText.Parent = background

local statusText = Instance.new("TextLabel")
statusText.Size = UDim2.new(1, 0, 0.05, 0)
statusText.Position = UDim2.new(0, 0, 0.08, 0)
statusText.BackgroundTransparency = 1
statusText.Text = "Status: Farming(nh·∫∑t r∆∞∆°ng)"
statusText.TextColor3 = Color3.fromRGB(255, 255, 255)
statusText.TextScaled = true
statusText.Font = Enum.Font.FredokaOne
statusText.Parent = background

local timeLabel = Instance.new("TextLabel")
timeLabel.Size = UDim2.new(1, 0, 0.04, 0)
timeLabel.Position = UDim2.new(0, 0, 0.9, 0)
timeLabel.BackgroundTransparency = 1
timeLabel.Text = "Time: 0 Hours 0 Minutes 0 Seconds"
timeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
timeLabel.TextScaled = true
timeLabel.Font = Enum.Font.FredokaOne
timeLabel.Parent = background

local logo = Instance.new("ImageLabel")
logo.Size = UDim2.new(0, 200, 0, 200)
logo.Position = UDim2.new(0.5, -100, 0.4, -100)
logo.BackgroundTransparency = 1
logo.Image = "rbxassetid://"
logo.Parent = background

local infoLabel = Instance.new("TextLabel")
infoLabel.Size = UDim2.new(0.95, 0, 0.05, 0)
infoLabel.Position = UDim2.new(0.025, 0, 0.94, 0)
infoLabel.BackgroundTransparency = 1
infoLabel.TextColor3 = Color3.new(1, 1, 1)
infoLabel.TextScaled = true
infoLabel.Font = Enum.Font.FredokaOne
infoLabel.Text = "Loading..."
infoLabel.Parent = background

spawn(function()
	while wait(1) do
		pcall(function()
			local level = player.Data.Level.Value
			local beli = player.Data.Beli.Value
			local frags = player.Data.Fragments.Value
			infoLabel.Text = "Player: " .. player.DisplayName .. " | Level: " .. level .. " | Beli: " .. beli .. " | Fragments: " .. frags
		end)
	end
end)

local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 120, 0, 40)
toggleButton.Position = UDim2.new(0, 15, 0, 70)
toggleButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.BackgroundTransparency = 0.1
toggleButton.BorderSizePixel = 0
toggleButton.Text = "Open"
toggleButton.TextColor3 = Color3.fromRGB(0, 0, 0)
toggleButton.TextScaled = true
toggleButton.Font = Enum.Font.GothamSemibold
toggleButton.Parent = gui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 12)
corner.Parent = toggleButton

local isOpen = false
toggleButton.MouseButton1Click:Connect(function()
	isOpen = not isOpen
	background.Visible = isOpen
	toggleButton.Text = isOpen and "Close" or "Open"
end)

local seconds = 0
spawn(function()
	while wait(1) do
		seconds += 1
		local hrs = math.floor(seconds / 3600)
		local mins = math.floor((seconds % 3600) / 60)
		local secs = seconds % 60
		timeLabel.Text = "Time: " .. hrs .. " Hours " .. mins .. " Minutes " .. secs .. " Seconds"
	end
end)
-- MY_ORIGINAL_SCRIPT
print("hello world")

local LocalPlayer = game:GetService("Players").LocalPlayer
local Locations = workspace._WorldOrigin.Locations

local function getCharacter()
    if not LocalPlayer.Character then
        LocalPlayer.CharacterAdded:Wait()
    end
    LocalPlayer.Character:WaitForChild("HumanoidRootPart")
    return LocalPlayer.Character
end

local function DistanceFromPlrSort(ObjectList: table)
    local RootPart = getCharacter().LowerTorso
    table.sort(ObjectList, function(ChestA, ChestB)
        local RootPos = RootPart.Position
        local DistanceA = (RootPos - ChestA.Position).Magnitude
        local DistanceB = (RootPos - ChestB.Position).Magnitude
        return DistanceA < DistanceB
    end)
end

local UncheckedChests, FirstRun = {}, true
local function getChestsSorted()
    if FirstRun then
        FirstRun = false
        for _, Object in pairs(game:GetDescendants()) do
            if Object.Name:find("Chest") and Object.ClassName == "Part" then
                table.insert(UncheckedChests, Object)
            end
        end
    end
    local Chests = {}
    for _, Chest in pairs(UncheckedChests) do
        if Chest:FindFirstChild("TouchInterest") then
            table.insert(Chests, Chest)
        end
    end
    DistanceFromPlrSort(Chests)
    return Chests
end

local function toggleNoclip(Toggle: boolean)
    for _, v in pairs(getCharacter():GetChildren()) do
        if v:IsA("BasePart") then
            v.CanCollide = not Toggle
        end
    end
end

local function Teleport(Goal: CFrame)
    local RootPart = getCharacter().HumanoidRootPart
    toggleNoclip(true)
    RootPart.CFrame = Goal + Vector3.new(0, 3, 0)
    toggleNoclip(false)
end

local function startFarm()
    task.spawn(function()
        while task.wait() do
            local Chests = getChestsSorted()
            if #Chests > 0 then
                Teleport(Chests[1].CFrame)
            else
                
            end
        end
    end)
end


task.spawn(function()
    local rs = game:GetService("ReplicatedStorage")
    while task.wait(5) do
        pcall(function()
            rs.Remotes.CommF_:InvokeServer("SetTeam","Marines")
        end)
    end
end)


LocalPlayer.CharacterAdded:Connect(function()
    task.wait(1) 
    startFarm()
end)

startFarm()

-- üåç Auto Server Hop sau 60 gi√¢y + Hi·ªáu ·ª©ng m√†n h√¨nh ƒëen
-- By TrongNguyen  Hub

repeat task.wait(2) until game:IsLoaded()

local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlaceID = game.PlaceId

local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour

-- ƒê·ªçc file server ƒë√£ join
local success = pcall(function()
    AllIDs = HttpService:JSONDecode(readfile("NotSameServers.json"))
end)

if not success then
    table.insert(AllIDs, actualHour)
    writefile("NotSameServers.json", HttpService:JSONEncode(AllIDs))
end

-- ‚ö° H√†m hi·ªán m√†n h√¨nh ƒëen + text
local function ShowBlackScreen()
    local gui = Instance.new("ScreenGui")
    gui.Name = "TrongNguyen _Hub_HopUI"
    gui.ResetOnSpawn = false
    gui.IgnoreGuiInset = true
    gui.Parent = game:GetService("CoreGui")

    local bg = Instance.new("Frame")
    bg.Size = UDim2.new(1,0,1,0)
    bg.BackgroundColor3 = Color3.new(0,0,0)
    bg.BorderSizePixel = 0
    bg.BackgroundTransparency = 0
    bg.Parent = gui

    local text1 = Instance.new("TextLabel")
    text1.Size = UDim2.new(1,0,0.2,0)
    text1.Position = UDim2.new(0,0,0.35,0)
    text1.BackgroundTransparency = 1
    text1.Text = "TUAN AURA HUB - Auto Collect Chest"
    text1.TextColor3 = Color3.new(1,1,1)
    text1.Font = Enum.Font.SourceSansBold
    text1.TextScaled = true
    text1.Parent = bg

    local text2 = Instance.new("TextLabel")
    text2.Size = UDim2.new(1,0,0.2,0)
    text2.Position = UDim2.new(0,0,0.5,0)
    text2.BackgroundTransparency = 1
    text2.Text = "ƒêANG CHUY·ªÇN ƒê·ªîI M√ÅY CH·ª¶"
    text2.TextColor3 = Color3.fromRGB(255, 170, 0)
    text2.Font = Enum.Font.SourceSansBold
    text2.TextScaled = true
    text2.Parent = bg
end

-- H√†m t√¨m server m·ªõi
function TPReturner()
    local Site
    if foundAnything == "" then
        Site = HttpService:JSONDecode(game:HttpGet(
            'https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'
        ))
    else
        Site = HttpService:JSONDecode(game:HttpGet(
            'https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything
        ))
    end

    if Site.nextPageCursor and Site.nextPageCursor ~= "null" then
        foundAnything = Site.nextPageCursor
    end

    local num = 0
    for _, v in pairs(Site.data) do
        local ID = tostring(v.id)
        local Possible = true
        if tonumber(v.playing) < tonumber(v.maxPlayers) then
            for _, Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local delFile = pcall(function()
                            delfile("NotSameServers.json")
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        end)
                    end
                end
                num = num + 1
            end
            if Possible then
                table.insert(AllIDs, ID)
                pcall(function()
                    writefile("NotSameServers.json", HttpService:JSONEncode(AllIDs))
                    -- ‚ö° Tr∆∞·ªõc khi hop 3 gi√¢y hi·ªán m√†n h√¨nh ƒëen
                    ShowBlackScreen()
                    task.wait(3)
                    TeleportService:TeleportToPlaceInstance(PlaceID, ID, LocalPlayer)
                end)
                task.wait(4)
            end
        end
    end
end

-- H√†m hop li√™n t·ª•c
function TeleportLoop()
    while task.wait() do
        pcall(function()
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end
end

-- ‚ö° Ch·ªù 100 gi√¢y sau khi b·∫≠t script r·ªìi hop
task.delay(100, function()
    TeleportLoop()
end)
-- üåå Auto Reset + Invisible (respawn support) + Clear Map (ghi ch√∫ m√†u t√≠m)
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local CoreGui = game:GetService("CoreGui")

if CoreGui:FindFirstChild("HN_MiniUI") then
    CoreGui.HN_MiniUI:Destroy()
end

local gui = Instance.new("ScreenGui")
gui.Name = "HN_MiniUI"
gui.Parent = CoreGui

-- H√†m t·∫°o toggle
local function createToggle(name, posY, default, callback)
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(0, 120, 0, 15)
    title.Position = UDim2.new(1, -140, 0.1, posY)
    title.AnchorPoint = Vector2.new(0, 0)
    title.BackgroundTransparency = 1
    title.Text = name
    title.TextColor3 = Color3.fromRGB(170, 0, 255) -- üíú ghi ch√∫ m√†u t√≠m
    title.Font = Enum.Font.GothamBold
    title.TextSize = 12
    title.Parent = gui

    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0, 20, 0, 20)
    btn.Position = UDim2.new(1, -70, 0.1, posY + 20)
    btn.AnchorPoint = Vector2.new(0, 0)
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.TextSize = 14
    btn.Font = Enum.Font.GothamBold
    btn.Parent = gui
    Instance.new("UICorner", btn).CornerRadius = UDim.new(1, 0)

    local state = default
    local function updateVisual()
        if state then
            btn.BackgroundColor3 = Color3.fromRGB(170, 0, 255) -- t√≠m khi on
            btn.Text = "‚úì"
        else
            btn.BackgroundColor3 = Color3.fromRGB(100, 100, 100) -- x√°m khi off
            btn.Text = ""
        end
    end
    updateVisual()

    btn.MouseButton1Click:Connect(function()
        state = not state
        updateVisual()
        callback(state)
    end)

    return function() return state end, function(newState)
        state = newState
        updateVisual()
        callback(state)
    end
end

-- === AUTO RESET ===
local AutoReset = true
createToggle("Anti Kick", 0, true, function(state)
    AutoReset = state
end)

task.spawn(function()
    while task.wait(13) do
        if AutoReset and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.Health = 0
        end
    end
end)

-- === INVISIBLE (b·∫£n th√¢n, gi·ªØ khi respawn) ===
local Invisible = false

local function setInvisible(state)
    if LocalPlayer.Character then
        for _, part in ipairs(LocalPlayer.Character:GetDescendants()) do
            if part:IsA("BasePart") or part:IsA("Decal") then
                part.LocalTransparencyModifier = state and 1 or 0
            end
        end
    end
end

local getInvState, setInvState = createToggle("Invisible", 60, false, function(state)
    Invisible = state
    setInvisible(Invisible)
end)

-- Khi respawn, n·∫øu Invisible ƒëang b·∫≠t th√¨ √°p l·∫°i
LocalPlayer.CharacterAdded:Connect(function(char)
    char:WaitForChild("HumanoidRootPart")
    task.wait(0.2)
    if Invisible then
        setInvisible(true)
    end

end)

